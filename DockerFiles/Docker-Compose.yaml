# docker-compose.yml
version: '3.8'

services:
  user_session_db:
    build:
      context: ./user_session_db # Directory containing user_session_db Dockerfile and init.sql
      dockerfile: Dockerfile
    container_name: user_session_db
    environment:
      MYSQL_DATABASE: user_session_db
      MYSQL_USER: your_user
      MYSQL_PASSWORD: your_password
      MYSQL_ROOT_PASSWORD: your_root_password # IMPORTANT: Set a strong password here
    ports:
      - "3306:3306" # Expose only for local development/testing, secure this in production
    volumes:
      - user_session_data:/var/lib/mysql # Persist data
    networks:
      - backend_network
    restart: always # Ensure the service restarts if it fails

  stock_prediction_db:
    build:
      context: ./stock_prediction_db # Directory containing stock_prediction_db Dockerfile and complex_init.sql
      dockerfile: Dockerfile
    container_name: stock_prediction_db
    environment:
      MYSQL_DATABASE: stock_prediction_db
      MYSQL_USER: your_complex_user
      MYSQL_PASSWORD: your_complex_password
      MYSQL_ROOT_PASSWORD: your_complex_root_password # IMPORTANT: Set a strong password here
    ports:
      - "3307:3306" # Map to a different host port if you run both locally
    volumes:
      - stock_prediction_data:/var/lib/mysql # Persist data
    networks:
      - backend_network
    restart: always

volumes:
  user_session_data:
  stock_prediction_data:

networks:
  backend_network:
    driver: bridge
